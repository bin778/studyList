모든 프로그래밍 언어는 변수를 선언하는 것부터 시작된다.
변수는 값을 저장하는 공간이다.
var name = "zig";
var year = 2022;

자바스크립트는 7가지 데이터 타입을 명시한다.
undefined, null, Boolean(참/거짓), String(문자열), Symbol, Numberic(Number, BigInt)
데이터 타입은 여러 종류의 데이터를 식별하는 분류 체계로 컴파일러에 값의 형태를 알려준다.

타입스크립트는 모든 TS파일을 하나의 모듈로 인식 하기 때문에 모듈 내에서 동일한 이름의 변수를 선언할 수 없다.
또한 타입스크립트는 변수의 타입이 서로 다르면 매개변수에 전달할 수 없다.
자바스크립트를 사용했다면 변수와 값을 다룰 때 타입을 고려할 필요가 없다.
자바스크립트에도 타입은 존재하지만 컴파일 이전에 타입을 직접 정의해줄 필요가 없다.

정적 타입 시스템에서는 모든 변수 타입이 컴파일 타임에 결정된다.
C, 자바, 타입스크립트같은 언어는 정적 타입 언어에 속한다.
코드 작성할 때 번거롭지만 컴파일 과정에서 타입 에러를 발견하기 쉽다.

동적 타입 시스템에서는 런타임에서 알아서 결정한다.
파이썬, 자바사크립트같은 언어는 동적 타입 언어에 속한다.
타입이 없어 유연하지만 프로그램에 오류가 발생하면 어디서 타입 에러가 발생했는데 발견하기 어렵다.

컴파일(Compile): 컴퓨터가 코드를 이해할 수 있도록 기계어로 변환하는 과정
런타임(Runtime): 변환된 파일이 메모리에 적재되어 실행되는 과정

암묵적 타입 변환 여부에 따라 타입 시스템을 강타입 언어와 약타입 언어로 구분할 수 있다.
강타입 언어: 서로 다른 타입을 갖는 값끼리 연산을 시도하면 컴파일 또는 인터프리터 과정에서 오류가 발생한다.
ex) 파이썬, 루비, 타입스크립트
약타입 언어: 서로 다른 타입을 갖더라도 컴파일 또는 인터프리터 과정에서 자동으로 변환하여 연산을 한다.
ex) C++, 자바, 자바스크립트

결론적으로 타입스크립트가 만들어진 이유는 사람이 이해하기 쉬운 방식으로 코드를 작성하기 위해서가 아니다.
자바스크립트는 고타입 언어이기 때문에 타입 언어를 잡기 어렵기 때문에 타입스크립트에서 런타임 에러를 잡기 위해서다.
