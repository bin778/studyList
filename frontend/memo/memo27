가장 기본적인 방법		원시적인 스타일시트 파일을 이용한 방법
	css		default.css
	scss		defaults.scss

리액트에서 제공하는 스타일시트 코딩 방법(비추천)
	styled-components

생산성 향상을 위해 외부 라이브러리를 이용한 방법(추천)
	tailwindcss
	기타 등등..
	
가장 추천하는 방법 = 외부라이브러리 + css/scss를 병행 이용

scss 	스타일을 사용하기 위한 결정
	nmp install node-sass

중첩
	상위 선택자의 반복을 피하고 좀 더 편리하게 복잡한 구조 작성 가능
	따라서 개발자들에게는 코딩 작성과 비슷하여 보다 직관적이다.

css
	.section { width: 100%; }
	.section .list { padding: 20px; }
	.section .list li { float: left; }
	... ... ... .. ... ..

scss
	.section {
		width: 100%;

		.list {
			padding: 20px;

			li {
				float: left;

Ampersand(상위 선택자 참조)
css
	.btn { position: absolute; }
	.btn > .span { color: red; }

scss
	.btn {
		position: absolute;

		& > span { color: red; }
	}

styled-components
	Javascript 파일 내에서 css를 사용할 수 있게 해주는 대표적인 CSS-in-JS 라이브러리
	React 프레임워크를 주요 대상으로 한 라이브러리이다.
	Javascript 파일마다 고유한 css 네임 스페이스를 부여해주기 때문에
	각 React 컴포넌트에 완전히 격리된 스타일을 적용할 수 있게 한다.

scss 스타일을 사용하기 위한 설정
	npm i styled-components

tailwindcss
	외부 라이브러리를 통해 보다 쉽고 빠르게 컴포넌트들을 디자인 하는 방법이다.
	미리 정해진 스타일의 클래스명을 통해 빠르게 디자인이 가능하다.

관련 패키지 설치
	npm install -D tailwindcss postcss autoprefixer

tailwind.config.js 파일 생성
/** @type {import('tailwindcss').Config} */ 
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}

index.css 내용 추가
	@tailwind base;
	@tailwind components;
	@tailwind utilities;

편의성을 위해 tailwindcss 관련 확장팩 설치
	Tailwind CSS IntelliSense
	Tailwind Docs
			}
		}
	}
	
tailwindcss 디자인 확인
	https://tailwindcss.com/docs/installation
