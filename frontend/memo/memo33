Data? 의미가 있는(쓰임새가 있는) 모든 정보와 자료,

DBMS (DataBase Management, System)
	데이터 베이스 관리 시스템
	ex) Oracle, MySQL

DataBase (기지, 집단, 군체, 집합) : 데이터들의 기자(집단) = DB
ex)
	어디서 사는 몇 살의 누구가 남성 혹은 여성이 요리 유튜브를 시청했다.
	Data? 성별, 나이, 지역, 영상 카테고리, 시청시간

Data가 돈이 되는 시대 => 많은 데이터를 저장할 필요
그리고 이러한 막대한 양의 데이터를 효율적으로 관리하기 위해 DBMS를 활용

DBMS
	- 다양한 데이터 집단(DB)를 관리하는 시스템 도구
	- 다수의 사용자가 같은 데이터베이스의 데이터에 접근할 수 있는 도구

종류
	- 계층형
	- 네트워크
	- 관계형 (O)
	- MySQL

RDBMS (Relational Database Management System)
관계형 DBMS

1. 관계형 데이터 모델에 기초를 두고 있음
2. 모든 데이터를 표 (액셀) 형태로 표현, 해당 표를 테이블이라고 부름.
3. 테이블 서로 관계지어져 있기 때문에 다른 DBMS보다 효율적으로 데이터를 구성
4. 데이터 관리를 위해 SQL이라는 언어를 사용

종류: Oracle, MySQL, MariaDB, MSSQL, PostgreSQL

MySQL
	Oracle과 더불어 세계에서 가장 널리 쓰이는 오픈 소스 RDBMS 중 하나

	설치: https://www.mysql.com/downloads/
	맨 하단의 MySQL Community 다운로드 클릭
	MySQL Community Server 클릭
	go to download page -> 용량 큰거

	developer, server, client 선택
	---------(선택)

	server: MySQL 접속가능한 서버만 설치
	client: server에 접속한 가능한 tool을 설치

	** 비밀번호
	계정: root
	비밀번호: 1234, 12345678 -> 반드시 지킬 필요는 없으나, 가급적 기억하기 쉬운 것으로

	** Visual Studio version C++ (2015~2019)
	해당 부분 설치 진행해야만 설치 가능


MySQL 데이터 타입(자료형), 제약조건(스키마)
* 데이터 타입
	1. 숫자타입
		정수: int, bigint (smallint, mediumint ...)
		소수: float, double

	2. 문자타입
		- char, varchar, text

	3. 날짜와 시간
		- dae, datetime, timestamp

	4. enum
		- enum('f', 'w') ==> 괄호 안에 데이터만 허용

* 제약 조건
	1. NOT NULL: null을 저장할 수 없음(required)
	2. UNIQE: 중복된 값을 저장할 수 없음
	3. DEFAULT: 값을 넣지 않았을 때 기본값
	4. KEY
		primary key : 기본키 (not null, unique)
		foregin key : 외래키 (RDBMS의 핵심 키 테이블관의 관계를 설정)

	5. AUTO_INCREMENT
		데이터를 넣지 않아도 숫자가 자동으로 증가되어 추가
		중복값이 저장되지 않음, 단 직접 추가 데이터 추가 불가능
		보통 id와 같은 pk(primary key)로 사용

테이블(설계): 회원테이블, 상품테이블
회원테이블: 고유번호, 아이디, 비번, 이름, 전화번호, 성별 ...
	SMS 광고 수신동의, 개인정보 제공 동의

스키마(제약조건, 데이터타입)
	tb_user: user_id(user_idx) bigint AUTO_INCREMENT PK
		user_email varchar(100) NOT NULL
		user_pw varchar(100) NOT NULL
		user_name ....

* SQL 쿼리문 (대소문자 구분이 없음)
	create table 테이블명(
		필드명(컬럼명) 데이터타입 제약조건
		필드명2 데이터타입 제약조건
		ex) ... user_id bigint AUTO_INCREMENT PK...
	);

	CRUD (Create Read Update Delete)
		생성 조회 갱신 삭제

	Create =>	insert into 테이블명 (컬럼명1, 컬럼명2) values (삽입 데이터1, 삽입 데이터2);
	Read =>	select * from 테이블명;
		select * from 테이블명 where 조건식; (where useridx = 1);
	Update =>update 테이블명 set 컬럼명 = 데이터 where 조건식;
		ex) update tb_user set user_email = "test1234@gmail.com" where user_idx = 1; 
	Delete =>	delete from 테이블명 where 조건식;

	+ 트랜지션, PL/SQL, 프로시져, join, 서브쿼리, 집계함수, 연산자
	order by, group having

	+ 모델링, 정규화, 반정규화
